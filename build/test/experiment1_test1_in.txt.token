1: true	false	or	and	not
	1: reserved words: (TK_KEY, true)
	1: reserved words: (TK_KEY, false)
	1: reserved words: (TK_KEY, or)
	1: reserved words: (TK_KEY, and)
	1: reserved words: (TK_KEY, not)
2: int	bool	string	while	do
	2: reserved words: (TK_KEY, int)
	2: reserved words: (TK_KEY, bool)
	2: reserved words: (TK_KEY, string)
	2: reserved words: (TK_KEY, while)
	2: reserved words: (TK_KEY, do)
3: if	then	else	end	repeat
	3: reserved words: (TK_KEY, if)
	3: reserved words: (TK_KEY, then)
	3: reserved words: (TK_KEY, else)
	3: reserved words: (TK_KEY, end)
	3: reserved words: (TK_KEY, repeat)
4: until	read	write	,	;
	4: reserved words: (TK_KEY, until)
	4: reserved words: (TK_KEY, read)
	4: reserved words: (TK_KEY, write)
	4: (TK_CMOMA, ,)
	4: (TK_SEMI, ;)
5: :=	+	-	*	/
	5: (TK_ASSIGN, :=)
	5: (TK_PLUS, +)
	5: (TK_SUB, -)
	5: (TK_MUL, *)
	5: (TK_DIV, /)
6: (	)	<	=	>
	6: (TK_LPAREN, '(')
	6: (TK_RPAREN, ')')
	6: (TK_LT, <)
	6: (TK_EQ, =)
	6: (TK_GT, >)
7: <=	>=	a2c	123	'EFG'
	7: *TK_LE, <=)
	7: (TK_GE, >=)
	7: (TK_ID, a2c)
	7: (TK_NUM, 123)
	7: (TK_STR, 'EFG')
8: 
9: {The following symbols are incorrect}
10: $ &
	10: (TK_ERROR, $)
	10: (TK_ERROR, &)
11: 123man
	11: (TK_NUM, 123)
	11: (TK_ID, man)
12: miss left single quotation mark'
	12: (TK_ID, miss)
	12: (TK_ID, left)
	12: (TK_ID, single)
	12: (TK_ID, quotation)
	12: (TK_ID, mark)
	12: (TK_ERROR, ')
13: 'miss right single quotation mark
	13: (TK_ERROR, 'miss right single quotation mark)
14: miss left curly bracket}
	14: (TK_ID, miss)
	14: (TK_ID, left)
	14: (TK_ID, curly)
	14: (TK_ID, bracket)
	14: (TK_ERROR, })
15: {miss right curly bracket
	15: (TK_ERROR, )
	15: (TK_ENDFILE, EOF)
